#
# Copyright Â© 2025 Agora
# This file is part of TEN Framework, an open source project.
# Licensed under the Apache License, Version 2.0, with certain conditions.
# Refer to the "LICENSE" file in the root directory for more information.
#
import("//build/feature/ten_package.gni")
import("//build/options.gni")
import("//build/ten_runtime/feature/publish.gni")
import("//build/ten_runtime/feature/ten_go_lint.gni")
import("//build/ten_runtime/options.gni")
import("//core/src/ten_runtime/output_libs.gni")

if (ten_enable_go_lint) {
  ten_go_lint("ten_go_binding_lint") {
    # The module path must contain .go files.
    lint_dir = "//core/src/ten_runtime/binding/go/interface/ten"
    go_exec = "go1.20.12"
  }
}

ten_package("ten_go_binding_system_package") {
  package_kind = "system"
  package_output_root_dir_name = "ten_runtime_go"

  resources = [ "manifest.json" ]

  interface_files =
      exec_script("//.gnfiles/build/scripts/glob_file.py",
                  [
                    "--dir",
                    rebase_path(
                        "//core/src/ten_runtime/binding/go/interface/**/*"),
                    "--dir-base",
                    rebase_path("//core/src/ten_runtime/binding/go/interface/"),
                    "--recursive",
                    "--only-output-file",
                  ],
                  "json")

  foreach(interface_file, interface_files) {
    interface_file_rel_path = interface_file.relative_path
    resources += [ "interface/${interface_file_rel_path}=>interface/${interface_file_rel_path}" ]
  }

  tools_files =
      exec_script("//.gnfiles/build/scripts/glob_file.py",
                  [
                    "--dir",
                    rebase_path("//core/src/ten_runtime/binding/go/tools/**/*"),
                    "--dir-base",
                    rebase_path("//core/src/ten_runtime/binding/go/tools/"),
                    "--recursive",
                    "--only-output-file",
                  ],
                  "json")

  foreach(tool_file, tools_files) {
    tool_file_rel_path = tool_file.relative_path
    resources += [ "tools/${tool_file_rel_path}=>tools/${tool_file_rel_path}" ]
  }

  foreach(lib, ten_runtime_go_output_libs) {
    libname = get_path_info(rebase_path(lib), "file")
    resources += [ "${lib}=>lib/${libname}" ]
  }

  deps = [ "native:ten_runtime_go" ]

  if (ten_enable_go_lint) {
    deps += [ ":ten_go_binding_lint" ]
  }
}

if (ten_enable_ten_manager) {
  ten_package_publish("upload_ten_go_binding_system_package_to_server") {
    base_dir = rebase_path("${root_out_dir}/ten_packages/system/ten_runtime_go")
    deps = [
      ":ten_go_binding_system_package",
      "native:ten_runtime_go",
    ]
  }
}

group("go") {
  deps = [ "native:ten_runtime_go" ]

  if (ten_enable_ten_manager) {
    deps += [ ":upload_ten_go_binding_system_package_to_server" ]
  }
}
