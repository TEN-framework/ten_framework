name: Tman Designer UI (Playwright Tests)

on:
  release:
    types: [created]
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "core/src/ten_manager/**"
      - "core/src/ten_rust/**"

concurrency:
  group: playwright-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [debug, release]
        arch: [x64]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      - name: Trust working directory
        run: git config --global --add safe.directory "${GITHUB_WORKSPACE}"

      - name: Initialize and update submodules except docs/
        run: |
          # Retrieve all submodule paths, excluding `docs/`.
          submodules=$(git config --file .gitmodules --get-regexp path | awk '$2 != "docs" { print $2 }')

          git submodule init

          for submodule in $submodules; do
            echo "Initializing submodule: $submodule"
            git submodule update --init --recursive "$submodule"
          done

      - name: Install Clang and libc++
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libc++-dev libc++abi-dev

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install tools and dependencies
        run: |
          pip3 install --use-pep517 python-dotenv jinja2

      - name: Install dependencies
        run: |
          cd core/src/ten_manager/designer_frontend
          bun install

      - name: Build (tman)
        run: |
          export PATH=$(pwd)/core/ten_gn:$PATH
          echo $PATH

          if [ "${{ matrix.arch }}" = "x64" ]; then
            rustup default nightly
          fi

          df -h .

          EXTRA_ARGS="is_clang=true log_level=1 enable_serialized_actions=true ten_enable_serialized_rust_action=true ten_rust_enable_gen_cargo_config=false ten_enable_cargo_clean=true ten_enable_go_lint=false ten_enable_rust_incremental_build=false ten_manager_enable_frontend=false ten_enable_integration_tests_prebuilt=false ten_enable_ffmpeg_extensions=false ten_enable_nodejs_binding=false ten_enable_python_binding=false ten_enable_go_binding=false ten_enable_ten_rust=true ten_enable_ten_manager=true"

          echo $EXTRA_ARGS

          tgn gen linux ${{ matrix.arch }} ${{ matrix.build_type }} -- $EXTRA_ARGS
          tgn build:ten_manager_package linux ${{ matrix.arch }} ${{ matrix.build_type }}

          df -h .
          tree -I 'gen|obj' out

      - name: Build (designer_frontend)
        run: |
          cd core/src/ten_manager/designer_frontend
          bun run build

      - name: Install Playwright Browsers
        run: |
          cd core/src/ten_manager/designer_frontend
          npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          cd core/src/ten_manager/designer_frontend
          bun run preview > /dev/null 2>&1 &
          sleep 5
          npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: core/src/ten_manager/designer_frontend/playwright-report/
          retention-days: 7
