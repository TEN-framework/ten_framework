#
# Copyright Â© 2025 Agora
# This file is part of TEN Framework, an open source project.
# Licensed under the Apache License, Version 2.0, with certain conditions.
# Refer to the "LICENSE" file in the root directory for more information.
#
import("//build/options.gni")
import("//build/ten_utils/options.gni")

config("utils_public_config") {
  cflags = []
  cflags_cc = []
  cflags_objc = []
  cflags_objcc = []
  libs = []
  include_dirs = [
    # This is _the_only_dir_ that can be put in public config
    "//core/include",
  ]
}

config("utils_private_config") {
  include_dirs = [
    "//core",
    "//core/src",
    "//core/include",
  ]

  defines = []
  if (is_win) {
    defines += [
      "OS_WINDOWS",
      "TEN_UTILS_EXPORT",
    ]
  } else if (is_linux) {
    defines += [ "OS_LINUX" ]
  } else if (is_mac) {
    defines += [ "OS_MACOS" ]
  }

  if (target_cpu_bigendian) {
    defines += [ "TARGET_CPU_BIG_ENDIAN" ]
  }

  if (ten_enable_memory_check) {
    defines += [ "TEN_ENABLE_MEMORY_CHECK" ]
  }

  cflags = []
  ldflags = []

  if (is_linux) {
    if (current_cpu == "x86") {
      cflags += [ "-m32" ]
      ldflags += [ "-m32" ]
    }
  }

  if (is_win && is_clang) {
    # using clang in windows
    cflags += [
      "-Wno-deprecated-declarations",
      "-Wno-incompatible-pointer-types",
      "-Wno-int-to-void-pointer-cast",
    ]
  }

  if (is_win) {
    if (is_debug) {
      cflags += [ "/MTd" ]
    } else {
      cflags += [ "/MT" ]
    }
  }

  cflags_cc = []
  if (!is_win) {
    cflags_cc += [
      "-std=c++${cxx_standard}",
      "-fno-rtti",
    ]
  } else {
    cflags_cc += [
      "/std:c++${cxx_standard}",
      "/GR-",
    ]
  }

  cflags_objc = []

  cflags_objcc = [ "-fno-rtti" ]

  libs = []
  if (is_mac) {
    libs += [
      "pthread",
      "c++",
    ]
  } else if (is_linux) {
    libs += [
      "pthread",
      "rt",
      "dl",
    ]
  }

  if (is_linux) {
    ldflags += [
      "-Wl,--version-script=" +
          rebase_path("//build/ten_utils/ld_script/linux"),
      "-Wl,--warn-once",
    ]
  } else if (is_mac) {
    ldflags += [
      "-Xlinker",
      "-exported_symbols_list",
      "-Xlinker",
      rebase_path("//build/ten_utils/ld_script/mac"),
      "-Wl,-w",
    ]
  } else if (is_win) {
    ldflags += [ "/ignore:4099" ]
  }
}
