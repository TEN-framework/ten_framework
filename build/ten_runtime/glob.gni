#
# Copyright Â© 2025 Agora
# This file is part of TEN Framework, an open source project.
# Licensed under the Apache License, Version 2.0, with certain conditions.
# Refer to the "LICENSE" file in the root directory for more information.
#
import("//build/ten_runtime/options.gni")

all_native_files = [
  "*.c",
  "*.cc",
  "*.cpp",
  "*.h",
  "*.hpp",
  "*.hh",
  "*.s",
  "*.S",
  "*.asm",
  "*.m",
  "*.mm",
]

template("glob") {
  assert(defined(invoker.file_list) || invoker.file_list == [],
         "file_list is not defined")

  source_set(target_name) {
    l = []
    foreach(f, invoker.file_list) {
      l += [
        "--dir",
        rebase_path(f),
      ]
    }

    sources =
        exec_script("//.gnfiles/build/scripts/glob_file.py", l, "list lines")
    if (defined(invoker.sources)) {
      sources += invoker.sources
    }

    include_dirs = ten_runtime_common_includes
    if (defined(invoker.include_dirs)) {
      include_dirs += invoker.include_dirs
    }

    defines = ten_runtime_common_defines
    if (defined(invoker.defines)) {
      defines += invoker.defines
    }

    if (defined(invoker.configs)) {
      configs += invoker.configs
    }

    deps = common_deps
    if (defined(invoker.deps)) {
      deps += invoker.deps
    }

    public_deps = common_public_deps
    if (defined(invoker.public_deps)) {
      public_deps += invoker.public_deps
    }

    libs = common_libs
    if (defined(invoker.libs)) {
      libs += invoker.libs
    }

    cflags = common_cflags
    if (defined(invoker.cflags)) {
      cflags += invoker.cflags
    }

    cflags_c = common_cflags_c
    if (defined(invoker.cflags_c)) {
      cflags_c += invoker.cflags_c
    }

    cflags_cc = common_cflags_cc
    if (defined(invoker.cflags_cc)) {
      cflags_cc += invoker.cflags_cc
    }

    cflags_objc = common_cflags_objc
    if (defined(invoker.cflags_objc)) {
      cflags_objc += invoker.cflags_objc
    }

    cflags_objcc = common_cflags_objcc
    if (defined(invoker.cflags_objc)) {
      cflags_objcc += invoker.cflags_objcc
    }
  }
}
